// Mocks generated by Mockito 5.3.2 from annotations
// in salt_music/test/modules/albums/albums_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:salt_music/app/data/model/album_response.dart' as _i3;
import 'package:salt_music/app/data/repository/album_repository.dart' as _i4;
import 'package:salt_music/app/data/service/rest_client.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRestClient_0 extends _i1.SmartFake implements _i2.RestClient {
  _FakeRestClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAlbumResponse_1 extends _i1.SmartFake implements _i3.AlbumResponse {
  _FakeAlbumResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AlbumRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlbumRepository extends _i1.Mock implements _i4.AlbumRepository {
  MockAlbumRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RestClient get restClient => (super.noSuchMethod(
        Invocation.getter(#restClient),
        returnValue: _FakeRestClient_0(
          this,
          Invocation.getter(#restClient),
        ),
      ) as _i2.RestClient);
  @override
  _i5.Future<_i3.AlbumResponse> getTopAlbums() => (super.noSuchMethod(
        Invocation.method(
          #getTopAlbums,
          [],
        ),
        returnValue: _i5.Future<_i3.AlbumResponse>.value(_FakeAlbumResponse_1(
          this,
          Invocation.method(
            #getTopAlbums,
            [],
          ),
        )),
      ) as _i5.Future<_i3.AlbumResponse>);
}
